upstream puma_<%= fetch(:application) %> {
  server unix://<%= shared_path %>/tmp/sockets/puma.sock;
}

server {
  listen 80;
  server_name <%= fetch(:deploy_server) %>;
  
  # Redirect all HTTP traffic to HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  server_name <%= fetch(:deploy_server) %>;
  
  root <%= current_path %>/public;
  index index.html index.htm;
  
  # SSL configuration
  ssl_certificate <%= fetch(:nginx_ssl_cert, "/etc/ssl/certs/#{fetch(:application)}.crt") %>;
  ssl_certificate_key <%= fetch(:nginx_ssl_key, "/etc/ssl/private/#{fetch(:application)}.key") %>;
  
  # Modern SSL configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
  ssl_ecdh_curve secp384r1;
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  
  # Security headers
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "strict-origin-when-cross-origin";
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'";
  
  # File upload size limit
  client_max_body_size 100M;
  
  # Access and error logs
  access_log <%= shared_path %>/log/nginx.access.log;
  error_log <%= shared_path %>/log/nginx.error.log info;
  
  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;
    
  # Static assets with long expiry
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
  }
  
  # Rails health check
  location /up {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
  }
  
  # Rails application
  location / {
    proxy_pass http://puma_<%= fetch(:application) %>;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
  }
  
  # Error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= current_path %>/public;
  }
}